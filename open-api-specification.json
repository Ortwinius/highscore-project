{
    "openapi": "3.1.0",
    "info": {
        "title": "HighScore API",
        "version": "1.0.0"
    },
    "paths": {
        "/users": {
            "get": {
                "summary": "Get a list of users",
                "responses": {
                    "200": {
                        "description": "A JSON array of user objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Register a new user",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/users/:id": {
            "get": {
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "summary": "Update user by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user ID"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "summary": "Delete user by ID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The user ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/highscores": {
            "get": {
                "summary": "Get all highscores",
                "responses": {
                    "200": {
                        "description": "A JSON array of all highscore objects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Highscore"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add a new highscore",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Highscore"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Highscore added successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique identifier for the user"
                    },
                    "username": {
                        "type": "string",
                        "description": "Username chosen by the user"
                    },
                    "email": {
                        "type": "string",
                        "description": "User's email address"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password"
                    }
                },
                "required": ["username", "email", "password"]
            },
            "Highscore": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Id of the player"
                    },
                    "score": {
                        "type": "integer",
                        "description": "Score achieved by the player"
                    }
                },
                "required": ["id", "score"]
            }
        }
    }
}
